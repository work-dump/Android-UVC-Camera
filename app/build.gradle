import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "humer.uvc_camera"
        targetSdkVersion 30
        minSdkVersion 15
        versionCode 116
        versionName "2.1.4"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        ndk.debugSymbolLevel = 'FULL'
    }
    buildTypes {
        customDebugType {
            debuggable false
        }
        release {
            externalNativeBuild {
                ndkBuild {
                    arguments "BUILD_TYPE=release"
                }}
            minifyEnabled true
            shrinkResources false

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            ndk.debugSymbolLevel = 'FULL'

            debuggable false
            jniDebuggable false
        }
        debug {
            debuggable true
            jniDebuggable true
            externalNativeBuild {
                ndkBuild {
                    cFlags "-DDEBUG=1"
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    // TODO silences:
    // [InvalidPackage]: not included in Android: java.awt. Referenced from com.sun.jna.Native.AWT.
    lintOptions {
        abortOnError false
    }

    applicationVariants.all { variant ->
        if (variant.getBuildType().isMinifyEnabled()) {
            variant.assemble.doLast {
                copy {
                    from variant.mappingFile
                    into "${rootDir}/proguardTools"
                    rename { String fileName ->
                        "mapping-${variant.name}.txt"
                    }
                }
            }
        }
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.2'
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.2'
    }

/*
    sourceSets {
        main {
            jniLibs.srcDir 'src/main/libs'
            jni.srcDirs = []
        }
    }
*/
    externalNativeBuild {
        cmake {
            path "src/main/cpp/libUvc_Support/CMakeLists.txt"
            version "3.10.2"
        }
    }

/*
    externalNativeBuild {
        cmake {
            path "src/main/c/libjpeg/CMakeLists.txt"
            version "3.10.2"
        }
    }
*/



    packagingOptions {
        pickFirst 'lib/x86_64/libUvc_Support.so'
        pickFirst 'lib/armeabi/libUvc_Support.so'
        pickFirst 'lib/x86/libUvc_Support.so'
        pickFirst 'lib/armeabi-v7a/libUvc_Support.so'
        pickFirst 'lib/arm64-v8a/libUvc_Support.so'

        pickFirst 'lib/x86_64/libusb1.0.so'
        pickFirst 'lib/armeabi/libusb1.0.so'
        pickFirst 'lib/x86/libusb1.0.so'
        pickFirst 'lib/armeabi-v7a/libusb1.0.so'
        pickFirst 'lib/arm64-v8a/libusb1.0.so'

        pickFirst 'lib/x86_64/libjpeg-turbo.so'
        pickFirst 'lib/armeabi/libjpeg-turbo.so'
        pickFirst 'lib/x86/libjpeg-turbo.so'
        pickFirst 'lib/armeabi-v7a/libjpeg-turbo.so'
        pickFirst 'lib/arm64-v8a/libjpeg-turbo.so'

        pickFirst 'lib/x86_64/libjpeg.so'
        pickFirst 'lib/armeabi/libjpeg.so'
        pickFirst 'lib/x86/libjpeg.so'
        pickFirst 'lib/armeabi-v7a/libjpeg.so'
        pickFirst 'lib/arm64-v8a/libjpeg.so'

        pickFirst 'lib/x86_64/libyuv.so'
        pickFirst 'lib/armeabi/libyuv.so'
        pickFirst 'lib/x86/libyuv.so'
        pickFirst 'lib/armeabi-v7a/libyuv.so'
        pickFirst 'lib/arm64-v8a/libyuv.so'

        pickFirst 'lib/x86_64/libuvc.so'
        pickFirst 'lib/armeabi/libuvc.so'
        pickFirst 'lib/x86/libuvc.so'
        pickFirst 'lib/armeabi-v7a/libuvc.so'
        pickFirst 'lib/arm64-v8a/libuvc.so'

        pickFirst 'lib/x86/libunrooted_android.so'
        pickFirst 'lib/armeabi/libunrooted_android.so'
        pickFirst 'lib/x86_64/libunrooted_android.so'
        pickFirst 'lib/armeabi-v7a/libunrooted_android.so'
        pickFirst 'lib/arm64-v8a/libunrooted_android.so'
    }


}



dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'net.java.dev.jna:jna:5.10.0@aar'
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:design:27.1.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    //FabSpeedDial Button
    implementation 'io.github.yavski:fab-speed-dial:1.0.7'

    //AlertDialog
    implementation 'com.crowdfire.cfalertdialog:cfalertdialog:1.1.0'

    //JNA
    implementation 'net.java.dev.jna:jna:5.10.0@aar'

    // WebRtc
    implementation 'org.webrtc:google-webrtc:1.0.22672'

    // @ RequiresApi
    implementation 'com.android.support:support-annotations:28.0.0'

    // TextInputLayout
    implementation 'com.rafakob:floatingedittext:1.0.5'

    //fading TextView
    implementation 'com.tomer:fadingtextview:2.6'
}


configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == "com.android.support") {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "26.+"
            }
        }
    }
}

